name: build
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
  
jobs:
  toolchain:
    name: Building gcc
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git gyp mercurial subversion ninja cmake ragel yasm nasm asciidoc enca gperf unzip xz gcc-multilib clang python-pip curl jq lib32-glib2 wget
          mkdir -p /home/opt/7zip
          wget -qO - https://www.7-zip.org/a/7z2201-linux-x64.tar.xz | tar -xJf - -C /home/opt/7zip 7zzs
          sudo ln -s /home/opt/7zip/7zzs /usr/bin/7z
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
      
      - uses: actions/checkout@main
      
      - name: Loading build64 cache
        uses: actions/cache@main
        id: build64
        with:
          path: build64
          key: build64
     
      - name: Loading repository cache
        uses: actions/cache@main
        id: src_packages
        with:
          path: src_packages
          key: src_packages
          
      - name: Loading rust toolchain cache
        uses: actions/cache@main
        id: rust_toolchain
        with:
          path: install_rustup
          key: rust_toolchain

      - name: Downloading source
        run: |
          PWD=$(pwd)
          git clone --depth 1 https://github.com/shinchiro/mpv-winbuild-cmake.git
          cmake -DTARGET_ARCH=x86_64-w64-mingw32 -DALWAYS_REMOVE_BUILDFILES=ON -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -DRUSTUP_LOCATION=$PWD/install_rustup -G Ninja -Bbuild64 -H$PWD/mpv-winbuild-cmake
          ninja -C build$BIT download || true

      - name: Building toolchain
        run: |
          if [[ ! "$(ls -A build64/install/bin)" ]]; then
            ninja -C build64 gcc
          fi  
          
      - name: Building mpv
        run: |
          ninja -C build64 update
          ninja -C build64 mpv
          
      - name: Get current time
        run: |
          echo "short_time=$(date "+%Y-%m-%d")" >> $GITHUB_ENV          

      - name: Packaging mpv
        run: |
          mkdir release64
          curl -OL https://github.com/eko5624/mpv-config/archive/refs/heads/main.zip
          unzip main.zip
          mv mpv-config-main/portable_config release64
          find build64 -name "mpv.exe" -print0 | xargs -0 -I {} cp {} release64
          7z a mpv-${{ env.short_time }}.7z release64/*
    
      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{ env.short_time }}
          name: ${{ env.short_time }}
          files: mpv*.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
